/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views_pkg;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model_pkg.Conexion;

/**
 *
 * @author santi
 */
public class Rutas extends javax.swing.JDialog {

        Conexion con = new Conexion();
        Connection cn;
        Statement st;
        ResultSet rs;
        DefaultTableModel model;
    public Rutas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        show_routes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbRutas = new javax.swing.JLabel();
        btnAgregarRuta = new javax.swing.JButton();
        btnEditarRuta = new javax.swing.JButton();
        btnEliminarRuta = new javax.swing.JButton();
        lbTablaDeRutas = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRutas = new javax.swing.JTable();
        lbRuta = new javax.swing.JLabel();
        txtRuta = new javax.swing.JTextField();
        lbHora = new javax.swing.JLabel();
        txtHora = new javax.swing.JTextField();
        lbFecha = new javax.swing.JLabel();
        lbDistancia = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        txtDistancia = new javax.swing.JTextField();
        lbCodigoRuta = new javax.swing.JLabel();
        txtCodigoRuta = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbRutas.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbRutas.setText("Rutas");

        btnAgregarRuta.setText("Agregar Ruta");
        btnAgregarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarRutaActionPerformed(evt);
            }
        });

        btnEditarRuta.setText("Editar Ruta");
        btnEditarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarRutaActionPerformed(evt);
            }
        });

        btnEliminarRuta.setText("Eliminar Ruta");
        btnEliminarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarRutaActionPerformed(evt);
            }
        });

        lbTablaDeRutas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbTablaDeRutas.setText("Tabla de Rutas");

        tblRutas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ruta", "Hora", "Fecha", "Distancia", "Codigo"
            }
        ));
        jScrollPane1.setViewportView(tblRutas);

        lbRuta.setText("Ruta:");

        lbHora.setText("Hora ( Hora : Minutos ):");

        lbFecha.setText("Fecha (a√±o : mes : dia):");

        lbDistancia.setText("Distancia (km):");

        lbCodigoRuta.setText("Codigo Ruta:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTablaDeRutas)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnAgregarRuta)
                                    .addComponent(lbRuta)
                                    .addComponent(lbHora)
                                    .addComponent(lbFecha)
                                    .addComponent(lbDistancia)
                                    .addComponent(lbCodigoRuta))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(btnEditarRuta)
                                        .addGap(41, 41, 41)
                                        .addComponent(btnEliminarRuta))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtRuta)
                                                .addComponent(txtHora, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                                            .addComponent(txtDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCodigoRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(lbRutas)))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbRutas)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRuta)
                    .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbHora)
                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbFecha))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDistancia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCodigoRuta)
                    .addComponent(txtCodigoRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarRuta)
                    .addComponent(btnEditarRuta)
                    .addComponent(btnEliminarRuta))
                .addGap(18, 18, 18)
                .addComponent(lbTablaDeRutas)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarRutaActionPerformed
        add_route();
    }//GEN-LAST:event_btnAgregarRutaActionPerformed

    private void btnEditarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarRutaActionPerformed
        edit_route();        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarRutaActionPerformed

    private void btnEliminarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarRutaActionPerformed
        delete_route();        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarRutaActionPerformed
    void add_route(){
        String ruta = txtRuta.getText();
        String hora= txtHora.getText();
        String fecha = txtFecha.getText();
        String distancia = txtDistancia.getText();
        int route_code = Integer.parseInt(txtCodigoRuta.getText());
        if(ruta.isEmpty() || hora.isEmpty()|| fecha.isEmpty() || distancia.isEmpty() ){
            JOptionPane.showMessageDialog(this, "Faltan campos por diligenciar");
        }else {
            String query = "INSERT INTO tb_routes(route, time, date, distance, code)VALUES('" + ruta + "','" + hora + "', '" + fecha + "','" + distancia + "', '" + route_code + "')";
            try {
                cn = con.getConnection();
                st = cn.createStatement();
                st.executeUpdate(query);
                show_routes();
                JOptionPane.showMessageDialog(this, "Se ha creado el registro con √©xito");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "No se pudo crear el registro"); 
                System.out.println(e);
                clear_rows_table();
                show_routes();
            }
        }
    }
    void edit_route(){
        int row_rutas =tblRutas.getSelectedRow();
        if (row_rutas<0) {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un registro de la tabla");
        }else{
            int route_code = Integer.parseInt(txtCodigoRuta.getText());
            String ruta = txtRuta.getText();
            String hora = txtHora.getText();
            String fecha = txtFecha.getText();
            String distancia = txtDistancia.getText();
        if (ruta.equals("") || hora.equals("") || fecha.equals("") || distancia.equals("")) {
            JOptionPane.showMessageDialog(this, "Faltan campos por diligenciar");
        }else{
            String sql = "UPDATE `tb_routes` SET `route` = '"+ruta+"', `time`= '"+hora +"',`date` = '"+fecha+"',`distance` = '"+distancia+"'  WHERE `code` = "+route_code;
            try{
                cn = con.getConnection();
                st = cn.createStatement();
                st.executeUpdate(sql);
                clear_rows_table();
                JOptionPane.showMessageDialog(this, "Se ha actualizado el registro");
                show_routes();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(this, "No se pudo actualizar la informaci√≥n del registro");
            }
        }
         }
        
    }

    void delete_route(){
        int row_rutas = tblRutas.getSelectedRow();
        
        if(row_rutas == -1)
            JOptionPane.showMessageDialog(this, "Debes de seleccionar un registro de la tabla");
        else{
            int route_code = Integer.parseInt(txtCodigoRuta.getText());
            String sql = "DELETE FROM `tb_routes` WHERE code = "+route_code;
            try{
                cn = con.getConnection();
                st = cn.createStatement();
                st.executeUpdate(sql);
                clear_rows_table();
                JOptionPane.showMessageDialog(this, "Se ha eliminado el registro");
                show_routes();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(this, "No se pudo eliminar la informaci√≥n del registro");
            }
        }
    }
    void show_routes(){
        String query = "SELECT * FROM tb_routes ";
        try{
            cn = con.getConnection();
            st = cn.createStatement();
            rs = st.executeQuery(query);
            Object[] ruta = new Object[5];
            model = (DefaultTableModel)tblRutas.getModel();
            while(rs.next()){
                ruta[0] = rs.getString("route");
                ruta[1] = rs.getString("time");
                ruta[2] = rs.getString("date");
                ruta[3] = rs.getInt("distance");
                ruta[4] = rs.getInt("code");
                model.addRow(ruta);
            }
            tblRutas.setModel(model);
        }catch (SQLException e){
            JOptionPane.showMessageDialog(null, "No se encontraron registros de hospital");
        }
    }
    
    void clear_rows_table(){
        for (int i = 0; i < tblRutas.getRowCount(); i++) {
            model.removeRow(i);
            i -= 1;
        }
        txtRuta.setText("");
        txtHora.setText("");
        txtFecha.setText("");
        txtDistancia.setText("");
        txtCodigoRuta.setText("");
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarRuta;
    private javax.swing.JButton btnEditarRuta;
    private javax.swing.JButton btnEliminarRuta;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCodigoRuta;
    private javax.swing.JLabel lbDistancia;
    private javax.swing.JLabel lbFecha;
    private javax.swing.JLabel lbHora;
    private javax.swing.JLabel lbRuta;
    private javax.swing.JLabel lbRutas;
    private javax.swing.JLabel lbTablaDeRutas;
    private javax.swing.JTable tblRutas;
    private javax.swing.JTextField txtCodigoRuta;
    private javax.swing.JTextField txtDistancia;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtRuta;
    // End of variables declaration//GEN-END:variables
}
